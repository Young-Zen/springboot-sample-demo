server:
  servlet:
    context-path: /
  port: 8080 #comment out this configuration because of adding it with -Dserver.port=80 in VM options

spring:
  application:
    name: springboot-sample-demo
  boot:
    admin:
      client:
        url: http://admin-service-address:8081
        username: admin
        password: admin
        instance:
#          name: springboot-sample-demo
          metadata:
            user.name: actuator
            user.password: actuator
  datasource:
    url: jdbc:mysql://mysql-service-address:3306/demo?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=GMT%2B8
    username: root
    password: mysql123root
    driver-class-name: com.mysql.cj.jdbc.Driver
    druid:
      # 初始化大小，最小，最大
      initialSize: 5
      minIdle: 5
      maxActive: 20
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      # 是否缓存preparedStatement，也就是PSCache MySQL下建议关闭
      poolPreparedStatements: true
      filter:
        # SQL状态监控
        stat:
          enabled: true
          db-type: mysql
          log-slow-sql: true
          slow-sql-millis: 1000
        # SQL防火墙
        wall:
          enabled: true
          db-type: mysql
          config:
            delete-allow: false
            drop-table-allow: false
      # 监控过滤器
      web-stat-filter:
        enabled: true
        exclusions: "*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid*,/actuator*,/swagger*,/webjars/*,/v2/api-docs"
      # druid 监控页面
      stat-view-servlet:
        enabled: true
        # 禁止手动重置监控数据
        reset-enable: false
      # Spring监控配置
      aop-patterns: com.sz.springbootsample.demo.controller.*,com.sz.springbootsample.demo.service.*,com.sz.springbootsample.demo.dao.*
  rabbitmq:
    host: rabbitmq-service-address
    port: 5672
    username: rabbitmq
    password: rabbitmq123admin
    virtual-host: /
    publisher-confirms: true  # 开启confirms回调 P -> Exchange，默认false
    publisher-returns: true   # 开启returnedMessage回调 Exchange -> Queue，默认false
    listener:
      simple:
        acknowledge-mode: manual  # 设置手动确认(ack) Queue -> C
        prefetch: 1 #消费者每次从队列获取的消息数量，如果有事务的话，必须大于等于transaction数量
        concurrency: 4  #消费者数量
        max-concurrency: 8  #最大消费者数量
    connection-timeout: 10s #连接超时时间
    requested-heartbeat: 3s #心跳超时时间
  redis:
    host: redis-service-address
    port: 6379
    password: Redis123admin
    database: 0
    lettuce:
      pool:
        max-active: 8   #连接池最大连接数（使用负值表示没有限制），默认8
        max-idle: 8     #连接池中的最大空闲连接，默认8
        min-idle: 2     #连接池中的最小空闲连接，默认0
        max-wait: -1ms  #连接池最大阻塞等待时间（使用负值表示没有限制），默认-1ms
    timeout: 10s        #连接超时时间
  profiles:
    active: test

management:
  endpoints:
    web:
      exposure:
        include: 'health,info'
  endpoint:
    shutdown:
      enabled: false
    health:
      probes:
        enabled: true
      show-details: never

custom:
  log:
    additional-skip-pattern: /|/ping
    result: false
#    enable: false

#override the method WebSecurityConfigurerAdapter.configure(AuthenticationManagerBuilder auth),the following configurations fails
#spring:
#  security:
#    user:
#      name: actuator
#      password: actuator
#      roles: ACTUATOR_ADMIN

---
spring:
  profiles: test
mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
custom:
  mybatisPlus:
    performance:
      enable: true
  swagger:
    csrf:
      enable: true

---
spring:
  profiles: prod

custom:
  swagger:
    enable: false