apiVersion: apps/v1
kind: Deployment
metadata:
  name: springboot-sample-demo
  labels:
    app: springboot-sample-demo
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: springboot-sample-demo
      version: v1
  template:
    metadata:
      labels:
        app: springboot-sample-demo
        version: v1
    spec:
      hostname: springboot-sample-demo
      imagePullSecrets:
        - name: registry-secret
      containers:
        - name: springboot-sample-demo
          image: baiduyun.com/springboot-sample-demo:1.0.0-SNAPSHOT
          imagePullPolicy: Always
          env:
            - name: JAVA_OPTS
              value: "-XshowSettings:vm -Djava.security.egd=file:/dev/./urandom"
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: APP_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']
            - name: spring.datasource.username
              valueFrom:
                secretKeyRef:
                  name: config-secret
                  key: mysqlUser
            - name: spring.datasource.password
              valueFrom:
                secretKeyRef:
                  name: config-secret
                  key: mysqlPassword
            - name: "MYSQL_HOST"
              valueFrom:
                secretKeyRef:
                  name: config-secret
                  key: mysqlHost
            - name: "MYSQL_PORT"
              valueFrom:
                secretKeyRef:
                  name: config-secret
                  key: mysqlPort
            - name: "spring.datasource.url"
              value: "jdbc:mysql://$(MYSQL_HOST):$(MYSQL_PORT)/demo?useUnicode=true&characterEncoding=utf8&autoReconnect=true&useSSL=false&serverTimezone=GMT%2B8"
            - name: "spring.redis.host"
              value: "redis-service-address"
            - name: "spring.rabbitmq.host"
              value: "rabbitmq-service-address"
            - name: "spring.boot.admin.client.url"
              value: "http://admin-service-address:8081"
          resources:
            limits:
              cpu: 1000m
              memory: 768Mi
            requests:
              cpu: 50m
              memory: 512Mi
          readinessProbe:
            httpGet:
              port: http
              path: /api/demo/actuator/health/readiness
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 2
            failureThreshold: 4
            successThreshold: 1
          livenessProbe:
            httpGet:
              port: http
              path: /api/demo/actuator/health/liveness
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 2
            failureThreshold: 4
            successThreshold: 1
          lifecycle:
            preStop:
              exec:
                command: [ "sleep", "10" ]
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: debug
              containerPort: 18080
              protocol: TCP
          volumeMounts:
            - name: upload-data-volume
              mountPath: /tmp/upload
      volumes:
        - name: upload-data-volume
          hostPath:
            path: /data/upload
            type: DirectoryOrCreate
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: springboot-sample-demo
  name: springboot-sample-demo
spec:
  selector:
    app: springboot-sample-demo
  type: NodePort
  externalTrafficPolicy: Local
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
      nodePort: 8080
